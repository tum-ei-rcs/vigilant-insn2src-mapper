# --------------------------------------------------------------------------- #
# CMakeLists.txt for libbincfg
# --------------------------------------------------------------------------- #
set(_TARGET_NAME bincfg)

set(_INC_PATH inc)
set(_SRC_PATH src)

# For each architecture mentioned here, the following files must be present:
# <arch>Instruction.cpp, <arch>FlowGenerator.cpp
set(ARCHS Avr ArmV5)

# search those files
foreach(arch ${ARCHS})
    FILE(GLOB _THIS_ARCH_SRCS
        RELATIVE
        ${CMAKE_CURRENT_LIST_DIR}
        ${CMAKE_CURRENT_LIST_DIR}/${_SRC_PATH}/arch/${arch}*.cpp
    )
    if (NOT _THIS_ARCH_SRCS)
        MESSAGE(FATAL_ERROR "Files for architecture ${arch} not found")
    endif()
    list(APPEND ARCH_SRCS ${_THIS_ARCH_SRCS})
endforeach()
MESSAGE(STATUS "Architecture files: ${ARCH_SRCS}")

# generate header and def files for FlowGeneratorFactory
set(GEN_FILE_ARCHDEF ${_INC_PATH}/bincfg/arch/archs.def)
set(GEN_FILE_ARCHSH  ${_INC_PATH}/bincfg/arch/archs.h)
FILE(WRITE "${GEN_FILE_ARCHDEF}" "/* this file is generated by cmake */\n")
FILE(WRITE "${GEN_FILE_ARCHSH}" "/* this file is generated by cmake */\n")
FILE(APPEND "${GEN_FILE_ARCHSH}" "#ifndef _ARCHS_H\n#define _ARCHS_H\n\n")
foreach(arch ${ARCHS})
  FILE(APPEND "${GEN_FILE_ARCHDEF}" "ARCH(${arch})\n")
  FILE(APPEND "${GEN_FILE_ARCHSH}" "#include \"bincfg/arch/${arch}FlowGenerator.hpp\"\n")
endforeach()
FILE(APPEND "${GEN_FILE_ARCHSH}" "\n#endif /* _ARCHS_H */\n")


# Populate the list with source files
set(_TARGET_SRCS
        src/Log.cpp
        src/arch/Instruction.cpp
        src/disasm/ElfDisassemblyReader.cpp
        src/flow/BasicBlock.cpp
        src/flow/Flow.cpp
        src/flow/FlowGenerator.cpp
        src/flow/FlowGeneratorFactory.cpp
        src/flow/FlowExporter.cpp
        src/flow/CsvFlowExporter.cpp
        src/flow/DotFlowExporter.cpp
        src/flow/JsonFlowExporter.cpp
        src/dwarf/DwarfReader.cpp
        src/dwarf/DwarfData.cpp
        src/dwarf/DwarfDie.cpp
        src/dwarf/DwarfAttribute.cpp
        src/dwarf/DwarfForm.cpp
        src/dwarf/DwarfLocation.cpp
    )
list(APPEND _TARGET_SRCS ${ARCH_SRCS})
list(APPEND _TARGET_SRCS ${GEN_FILE_ARCHDEF})
list(APPEND _TARGET_SRCS ${GEN_FILE_ARCHSH})
MESSAGE(STATUS "Sources: ${_TARGET_SRCS}")


# Static only
add_library(${_TARGET_NAME} STATIC ${_TARGET_SRCS})

# Include paths
target_include_directories(${_TARGET_NAME} PRIVATE
    ${_INC_PATH}
    ${COMMON_INC_DIR}
    ${LIBDWARF_INC}
    ${LIBJSON_INC}
)

target_link_libraries(${_TARGET_NAME} ${LIBDWARF} ${LIBJSON} ${LIBELF} ${ZLIB})

# Install locations
install(TARGETS ${_TARGET_NAME}
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib)
